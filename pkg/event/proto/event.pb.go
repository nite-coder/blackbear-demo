// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/event/proto/event.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PublishedStatus int32

const (
	PublishedStatus_PublishedStatus_UNSPECIFIED PublishedStatus = 0
	PublishedStatus_PublishedStatus_Draft       PublishedStatus = 1
	PublishedStatus_PublishedStatus_Published   PublishedStatus = 2
)

var PublishedStatus_name = map[int32]string{
	0: "PublishedStatus_UNSPECIFIED",
	1: "PublishedStatus_Draft",
	2: "PublishedStatus_Published",
}
var PublishedStatus_value = map[string]int32{
	"PublishedStatus_UNSPECIFIED": 0,
	"PublishedStatus_Draft":       1,
	"PublishedStatus_Published":   2,
}

func (x PublishedStatus) String() string {
	return proto.EnumName(PublishedStatus_name, int32(x))
}
func (PublishedStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_event_5031baa5249eff86, []int{0}
}

type Event struct {
	Id                   int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string               `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description          string               `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	PublishedStatus      PublishedStatus      `protobuf:"varint,4,opt,name=published_status,json=publishedStatus,proto3,enum=proto.PublishedStatus" json:"published_status,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_5031baa5249eff86, []int{0}
}
func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (dst *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(dst, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Event) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Event) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Event) GetPublishedStatus() PublishedStatus {
	if m != nil {
		return m.PublishedStatus
	}
	return PublishedStatus_PublishedStatus_UNSPECIFIED
}

func (m *Event) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Event) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type GetEventsRequest struct {
	Id                   int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string               `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	PublishedStatus      PublishedStatus      `protobuf:"varint,4,opt,name=published_status,json=publishedStatus,proto3,enum=proto.PublishedStatus" json:"published_status,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetEventsRequest) Reset()         { *m = GetEventsRequest{} }
func (m *GetEventsRequest) String() string { return proto.CompactTextString(m) }
func (*GetEventsRequest) ProtoMessage()    {}
func (*GetEventsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_5031baa5249eff86, []int{1}
}
func (m *GetEventsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventsRequest.Unmarshal(m, b)
}
func (m *GetEventsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventsRequest.Marshal(b, m, deterministic)
}
func (dst *GetEventsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventsRequest.Merge(dst, src)
}
func (m *GetEventsRequest) XXX_Size() int {
	return xxx_messageInfo_GetEventsRequest.Size(m)
}
func (m *GetEventsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventsRequest proto.InternalMessageInfo

func (m *GetEventsRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetEventsRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *GetEventsRequest) GetPublishedStatus() PublishedStatus {
	if m != nil {
		return m.PublishedStatus
	}
	return PublishedStatus_PublishedStatus_UNSPECIFIED
}

func (m *GetEventsRequest) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type GetEventsResponse struct {
	Events               []*Event `protobuf:"bytes,1,rep,name=Events,proto3" json:"Events,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEventsResponse) Reset()         { *m = GetEventsResponse{} }
func (m *GetEventsResponse) String() string { return proto.CompactTextString(m) }
func (*GetEventsResponse) ProtoMessage()    {}
func (*GetEventsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_5031baa5249eff86, []int{2}
}
func (m *GetEventsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventsResponse.Unmarshal(m, b)
}
func (m *GetEventsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventsResponse.Marshal(b, m, deterministic)
}
func (dst *GetEventsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventsResponse.Merge(dst, src)
}
func (m *GetEventsResponse) XXX_Size() int {
	return xxx_messageInfo_GetEventsResponse.Size(m)
}
func (m *GetEventsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventsResponse proto.InternalMessageInfo

func (m *GetEventsResponse) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

type UpdatePublishStatusRequest struct {
	EventId              int64           `protobuf:"varint,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	TransId              string          `protobuf:"bytes,2,opt,name=trans_id,json=transId,proto3" json:"trans_id,omitempty"`
	PublishedStatus      PublishedStatus `protobuf:"varint,3,opt,name=published_status,json=publishedStatus,proto3,enum=proto.PublishedStatus" json:"published_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UpdatePublishStatusRequest) Reset()         { *m = UpdatePublishStatusRequest{} }
func (m *UpdatePublishStatusRequest) String() string { return proto.CompactTextString(m) }
func (*UpdatePublishStatusRequest) ProtoMessage()    {}
func (*UpdatePublishStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_5031baa5249eff86, []int{3}
}
func (m *UpdatePublishStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePublishStatusRequest.Unmarshal(m, b)
}
func (m *UpdatePublishStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePublishStatusRequest.Marshal(b, m, deterministic)
}
func (dst *UpdatePublishStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePublishStatusRequest.Merge(dst, src)
}
func (m *UpdatePublishStatusRequest) XXX_Size() int {
	return xxx_messageInfo_UpdatePublishStatusRequest.Size(m)
}
func (m *UpdatePublishStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePublishStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePublishStatusRequest proto.InternalMessageInfo

func (m *UpdatePublishStatusRequest) GetEventId() int64 {
	if m != nil {
		return m.EventId
	}
	return 0
}

func (m *UpdatePublishStatusRequest) GetTransId() string {
	if m != nil {
		return m.TransId
	}
	return ""
}

func (m *UpdatePublishStatusRequest) GetPublishedStatus() PublishedStatus {
	if m != nil {
		return m.PublishedStatus
	}
	return PublishedStatus_PublishedStatus_UNSPECIFIED
}

func init() {
	proto.RegisterType((*Event)(nil), "proto.Event")
	proto.RegisterType((*GetEventsRequest)(nil), "proto.GetEventsRequest")
	proto.RegisterType((*GetEventsResponse)(nil), "proto.GetEventsResponse")
	proto.RegisterType((*UpdatePublishStatusRequest)(nil), "proto.UpdatePublishStatusRequest")
	proto.RegisterEnum("proto.PublishedStatus", PublishedStatus_name, PublishedStatus_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EventServiceClient is the client API for EventService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventServiceClient interface {
	GetEvents(ctx context.Context, in *GetEventsRequest, opts ...grpc.CallOption) (*GetEventsResponse, error)
	UpdatePublishStatus(ctx context.Context, in *UpdatePublishStatusRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type eventServiceClient struct {
	cc *grpc.ClientConn
}

func NewEventServiceClient(cc *grpc.ClientConn) EventServiceClient {
	return &eventServiceClient{cc}
}

func (c *eventServiceClient) GetEvents(ctx context.Context, in *GetEventsRequest, opts ...grpc.CallOption) (*GetEventsResponse, error) {
	out := new(GetEventsResponse)
	err := c.cc.Invoke(ctx, "/proto.EventService/GetEvents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) UpdatePublishStatus(ctx context.Context, in *UpdatePublishStatusRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto.EventService/UpdatePublishStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EventServiceServer is the server API for EventService service.
type EventServiceServer interface {
	GetEvents(context.Context, *GetEventsRequest) (*GetEventsResponse, error)
	UpdatePublishStatus(context.Context, *UpdatePublishStatusRequest) (*empty.Empty, error)
}

func RegisterEventServiceServer(s *grpc.Server, srv EventServiceServer) {
	s.RegisterService(&_EventService_serviceDesc, srv)
}

func _EventService_GetEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEventsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).GetEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.EventService/GetEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).GetEvents(ctx, req.(*GetEventsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_UpdatePublishStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePublishStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).UpdatePublishStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.EventService/UpdatePublishStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).UpdatePublishStatus(ctx, req.(*UpdatePublishStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EventService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.EventService",
	HandlerType: (*EventServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetEvents",
			Handler:    _EventService_GetEvents_Handler,
		},
		{
			MethodName: "UpdatePublishStatus",
			Handler:    _EventService_UpdatePublishStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/event/proto/event.proto",
}

func init() { proto.RegisterFile("pkg/event/proto/event.proto", fileDescriptor_event_5031baa5249eff86) }

var fileDescriptor_event_5031baa5249eff86 = []byte{
	// 440 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x93, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x86, 0x59, 0x87, 0xa4, 0x64, 0x52, 0xb5, 0x66, 0x81, 0xe2, 0x38, 0x42, 0x35, 0x11, 0x07,
	0x8b, 0x83, 0x23, 0x85, 0x53, 0x2f, 0x48, 0x11, 0x0d, 0x28, 0x17, 0x14, 0x39, 0xf4, 0x1c, 0x39,
	0xd9, 0x69, 0x58, 0x91, 0xc4, 0x8b, 0x77, 0x5c, 0x89, 0x37, 0xe0, 0x05, 0xb8, 0xf3, 0x14, 0x3c,
	0x1f, 0xf2, 0xee, 0x26, 0x2a, 0x6e, 0x10, 0x70, 0xe2, 0x94, 0x9d, 0xf9, 0xff, 0x89, 0xe7, 0xff,
	0xbc, 0x86, 0x9e, 0xfa, 0xb4, 0x1a, 0xe0, 0x0d, 0x6e, 0x69, 0xa0, 0x8a, 0x9c, 0x72, 0x7b, 0x4e,
	0xcc, 0x99, 0x37, 0xcd, 0x4f, 0x78, 0xbe, 0xca, 0xf3, 0xd5, 0x1a, 0xad, 0x61, 0x51, 0x5e, 0x0f,
	0x48, 0x6e, 0x50, 0x53, 0xb6, 0x51, 0xd6, 0x17, 0xf6, 0xea, 0x06, 0xdc, 0x28, 0xfa, 0x62, 0xc5,
	0xfe, 0x57, 0x0f, 0x9a, 0xe3, 0xea, 0x4f, 0xf9, 0x09, 0x78, 0x52, 0x04, 0x2c, 0x62, 0x71, 0x23,
	0xf5, 0xa4, 0xe0, 0x8f, 0xa1, 0x49, 0x92, 0xd6, 0x18, 0x78, 0x11, 0x8b, 0xdb, 0xa9, 0x2d, 0x78,
	0x04, 0x1d, 0x81, 0x7a, 0x59, 0x48, 0x45, 0x32, 0xdf, 0x06, 0x0d, 0xa3, 0xdd, 0x6e, 0xf1, 0x11,
	0xf8, 0xaa, 0x5c, 0xac, 0xa5, 0xfe, 0x88, 0x62, 0xae, 0x29, 0xa3, 0x52, 0x07, 0xf7, 0x23, 0x16,
	0x9f, 0x0c, 0xcf, 0xec, 0x33, 0x93, 0xe9, 0x4e, 0x9e, 0x19, 0x35, 0x3d, 0x55, 0xbf, 0x36, 0xf8,
	0x05, 0xc0, 0xb2, 0xc0, 0x8c, 0x50, 0xcc, 0x33, 0x0a, 0x9a, 0x11, 0x8b, 0x3b, 0xc3, 0x30, 0xb1,
	0x31, 0x92, 0x5d, 0x8c, 0xe4, 0xc3, 0x2e, 0x67, 0xda, 0x76, 0xee, 0x11, 0x55, 0xa3, 0xa5, 0x12,
	0xbb, 0xd1, 0xd6, 0x9f, 0x47, 0x9d, 0x7b, 0x44, 0xfd, 0x1f, 0x0c, 0xfc, 0x77, 0x48, 0x86, 0x86,
	0x4e, 0xf1, 0x73, 0x89, 0xfa, 0x6f, 0xa9, 0xfc, 0xd7, 0xcc, 0xfd, 0x0b, 0x78, 0x78, 0x6b, 0x6f,
	0xad, 0xf2, 0xad, 0x46, 0xfe, 0x02, 0x5a, 0xb6, 0x13, 0xb0, 0xa8, 0x11, 0x77, 0x86, 0xc7, 0x6e,
	0x11, 0xd3, 0x4c, 0x9d, 0xd6, 0xff, 0xc6, 0x20, 0xbc, 0x32, 0x04, 0xdc, 0x82, 0x6e, 0x3d, 0x97,
	0xbe, 0x0b, 0x0f, 0xcc, 0x8d, 0x9b, 0xef, 0x19, 0x1c, 0x99, 0x7a, 0x22, 0x2a, 0x89, 0x8a, 0x6c,
	0xab, 0x2b, 0xc9, 0xb2, 0x38, 0x32, 0xf5, 0x44, 0x1c, 0xa4, 0xd1, 0xf8, 0x27, 0x1a, 0x2f, 0xd7,
	0x70, 0x5a, 0xf3, 0xf0, 0x73, 0xe8, 0xd5, 0x5a, 0xf3, 0xab, 0xf7, 0xb3, 0xe9, 0xf8, 0xcd, 0xe4,
	0xed, 0x64, 0x7c, 0xe9, 0xdf, 0xe3, 0x5d, 0x78, 0x52, 0x37, 0x5c, 0x16, 0xd9, 0x35, 0xf9, 0x8c,
	0x3f, 0x83, 0x6e, 0x5d, 0xda, 0xd7, 0xbe, 0x37, 0xfc, 0xce, 0xe0, 0xd8, 0x00, 0x99, 0x61, 0x71,
	0x23, 0x97, 0xc8, 0x5f, 0x43, 0x7b, 0x4f, 0x94, 0x3f, 0x75, 0x4b, 0xd7, 0xef, 0x46, 0x18, 0xdc,
	0x15, 0x1c, 0xfc, 0x29, 0x3c, 0x3a, 0x40, 0x95, 0x3f, 0x77, 0x03, 0xbf, 0x27, 0x1e, 0x9e, 0xdd,
	0x79, 0xe5, 0xe3, 0xea, 0x6b, 0x5d, 0xb4, 0x4c, 0xfd, 0xea, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x4f, 0x51, 0x0f, 0xcc, 0x12, 0x04, 0x00, 0x00,
}
